# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	sys-libs/cracklib:0,
	sys-libs/db:4.7,
	sys-libs/db:4.8,
	sys-libs/e2fsprogs-libs:0,
	sys-libs/freeipmi:0,
	sys-libs/gdbm:0,
	sys-libs/glibc:2.2,
	sys-libs/gpm:0,
	sys-libs/gwenhywfar:0,
	sys-libs/lib-compat-loki:0,
	sys-libs/libaal:0,
	sys-libs/libavc1394:0,
	sys-libs/libcap:0,
	sys-libs/libcap-ng:0,
	sys-libs/libchipcard:0,
	sys-libs/libhx:0,
	sys-libs/libieee1284:0,
	sys-libs/libixp:0,
	sys-libs/libkudzu:0,
	sys-libs/libmath++:1,
	sys-libs/libosinfo:0,
	sys-libs/libraw1394:0,
	sys-libs/libsafe:0,
	sys-libs/libseccomp:0,
	sys-libs/libsepol:0,
	sys-libs/libsmbios:0,
	sys-libs/libstatgrab:0,
	sys-libs/libstdc++-v3:5,
	sys-libs/libtermcap-compat:0,
	sys-libs/libtrash:0,
	sys-libs/libunwind:7,
	sys-libs/libuser:0,
	sys-libs/libutempter:0,
	sys-libs/lwp:1,
	sys-libs/mtdev:0,
	sys-libs/ncurses:5,
	sys-libs/openipmi:0,
	sys-libs/pam:0,
	sys-libs/pwdb:0,
	sys-libs/readline:0,
	sys-libs/rvm:1,
	sys-libs/slang:0,
	sys-libs/system-config-base:0,
	sys-libs/talloc:0,
	sys-libs/tdb:0,
	sys-libs/timezone-data:0,
	sys-libs/zlib:0

# Enforce stable or unstable packages on emerge.
# yes = only stable packages are accepted
# no  = both stable and unstable packages are accepted
# inherit = inherit portage make.conf.* settings for ACCEPT_KEYWORDS
# Valid values are either "yes" or "no", "inherit"
# Default is: inherit
stable: yes

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow soft-blockers in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
soft-blocker: yes

# Allow package unmerges in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
unmerge: yes

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
